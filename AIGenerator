Function CallDeepSeekAPI(api_key As String, inputText As String) As String
    Dim API As String
    Dim SendTxt As String
    Dim Http As Object
    Dim status_code As Integer
    Dim response As String
    
    API = "https://api.siliconflow.cn/v1/chat/completions"
    
    ' 安全构造 免费大模型 JSON deepseek-ai/DeepSeek-R1-Distill-Qwen-7B; Qwen/Qwen2.5-Coder-7B-Instruct; deepseek-ai/DeepSeek-R1-Distill-Llama-8B
    SendTxt = "{"
    SendTxt = SendTxt & """model"": ""Qwen/Qwen2.5-7B-Instruct"","
    SendTxt = SendTxt & """messages"": ["
    SendTxt = SendTxt & "{""role"": ""system"", ""content"": ""You are a Word assistant""},"
    SendTxt = SendTxt & "{""role"": ""user"", ""content"": """ & Replace(inputText, """", "\""") & """}"
    SendTxt = SendTxt & "],"
    SendTxt = SendTxt & """stream"": false,"
    SendTxt = SendTxt & """max_tokens"": 4096" ' 增大 token 限制
    SendTxt = SendTxt & "}"
    
    Set Http = CreateObject("MSXML2.XMLHTTP")
    With Http
        .Open "POST", API, False
        .setRequestHeader "Content-Type", "application/json"
        .setRequestHeader "Authorization", "Bearer " & api_key
        .Send SendTxt
        status_code = .Status
        response = Replace(.responseText, Chr(0), "") ' 过滤特殊字符
    End With
    
    ' 写入日志文件
    If status_code = 200 Then
        CallDeepSeekAPI = response
        Open "D:\api_response.log" For Append As #1
        Print #1, Now() & " Response: " & response
        Close #1
    Else
        CallDeepSeekAPI = "Error: " & status_code & " - " & response
    End If
End Function

Function ExtractContent(responseText As String) As String
    Dim regEx As Object
    Dim matches As Object
    Dim result As String
    
    Set regEx = CreateObject("VBScript.RegExp")
    With regEx
        .Global = True
        .MultiLine = True
        .IgnoreCase = False
        .Pattern = """(?:content|reasoning_content)"":\s*""((?:[^""\\]|\\.)*)"""
    End With
    
    Set matches = regEx.Execute(responseText)
    
    ' 合并所有匹配内容（按出现顺序）
    For i = 0 To matches.Count - 1
        If matches(i).SubMatches.Count > 0 Then
            Content = matches(i).SubMatches(0)
            
            ' 处理转义字符序列（按 JSON 标准处理）
            Content = Replace(Content, "\""", """")   ' 转义双引号
            Content = Replace(Content, "\\", "\")     ' 转义反斜杠
            Content = Replace(Content, "\/", "/")     ' 转义斜杠
            Content = Replace(Content, "\b", Chr(8))  ' 退格
            Content = Replace(Content, "\f", Chr(12)) ' 换页
            Content = Replace(Content, "\n", vbCrLf)  ' 换行
            Content = Replace(Content, "\r", vbCr)    ' 回车
            Content = Replace(Content, "\t", vbTab)   ' 水平制表符
            
            result = result & Content
        End If
    Next i
    ExtractContent = result
    Set regEx = Nothing
End Function

Function CleanApiResponse(responseText As String) As String
    Dim regEx As Object
    Dim cleanedText As String
    
    Set regEx = CreateObject("VBScript.RegExp")
    
    ' ========== 核心处理逻辑 ==========
    
    ' 1. 替换连续 \n\n 为 Word 段落标记（^p）
    regEx.Pattern = "(\\n){2,}"  ' 匹配连续2个及以上 \n
    regEx.Global = True
    cleanedText = regEx.Replace(responseText, vbCrLf) ' Word段落换行
    
    ' 2. 替换多个 vbCrlf 多个回车为 一个Word 换行符（Shift+Enter）
    regEx.Pattern = "(\\r){2,}"  ' 匹配连续2个及以上 \n
    cleanedText = regEx.Replace(cleanedText, "\r")
      
    ' 3. 处理其他转义字符
    regEx.Pattern = "\\([^n])"  ' 匹配非换行的转义符（如 \", \t）
    cleanedText = regEx.Replace(cleanedText, "$1") ' 移除转义符保留内容
    
    ' 4. 清理剩余特殊符号
    ' regEx.Pattern = "[^\x00-\x7F]"  ' 匹配非ASCII字符（可选）
    ' cleanedText = regEx.Replace(cleanedText, "") ' 根据需求开启
    
    ' ========== 最终优化 ==========
    CleanApiResponse = Trim(cleanedText)
    Set regEx = Nothing
End Function


Sub DeepSeekV3()
    Dim api_key As String
    Dim inputText As String
    Dim response As String
    Dim originalSelection As Object

    api_key = "sk-你的申请的 API Key"
    If api_key = "" Then
        MsgBox "Please enter the API key."
        Exit Sub
    ElseIf Selection.Type <> wdSelectionNormal Then
        MsgBox "Please select text."
        Exit Sub
    End If

    ' 保存原始选中的文本
    Set originalSelection = Selection.Range.Duplicate

    inputText = Replace(Replace(Replace(Replace(Replace(Selection.Text, "\", "\\"), vbCrLf, ""), vbCr, ""), vbLf, ""), Chr(34), "\""")
    response = CallDeepSeekAPI(api_key, inputText)

    If Left(response, 5) <> "Error" Then
              
        If Len(response) > 0 Then
   
            response = ExtractContent(response)
            'Open "D:\api_response.log" For Append As #3
            'Print #3, Now() & "第3次过滤" & " Response: " & response
            'Close #3
            
             ' 将连续的两个换行符转换为Word可识别的格式
           
            response = CleanApiResponse(response)
            
            'Open "D:\api_response.log" For Append As #4
            'Print #4, Now() & "第4次过滤" & " Response: " & response
           ' Close #4

            ' 取消选中原始文本
            Selection.Collapse Direction:=wdCollapseEnd
            
                ' 记录插入起始位置
            Dim startPos As Long
            startPos = Selection.Start

            ' 将内容插入到选中文字的下一行
            Selection.TypeParagraph ' 插入新行
                     
            Selection.TypeText Text:=response
            
             ' 记录结束位置
            Dim endPos As Long
            endPos = Selection.Start
            
          ' 选中新插入的文本
            Dim newRange As Range
            Set newRange = ActiveDocument.Range(startPos, endPos)
            
            ' 设置格式
            With newRange
                ' 设置字体
                .Font.Name = "宋体"
                .Font.Name = "Times New Roman"
                .Font.Size = 11
                
                ' 设置段落格式：首行缩进2字符（约等于28.35磅）
                .Paragraphs.FirstLineIndent = CentimetersToPoints(1) ' 2字符≈1厘米
                ' 或者直接设置磅值（1字符≈14.175磅）
                ' .Paragraphs.FirstLineIndent = 28.35 ' 2字符
                
                ' 可选：设置行距
                .Paragraphs.LineSpacingRule = wdLineSpaceMultiple
                .Paragraphs.LineSpacing = 18 ' 1.5倍行距
            End With

            ' 将光标移回原来选中文本的末尾
            originalSelection.Select
        Else
            MsgBox "Failed to parse API response.", vbExclamation
        End If
    Else
        MsgBox response, vbCritical
    End If
End Sub
